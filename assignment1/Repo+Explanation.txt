Link to git repository: https://github.com/talkad/animation3D


Explanation of clauses 10-11 implementation:

Clause 10: 

- We wrote a function called "new_cost_and_placement" which calculates the cost of an edge and the coordinates
  of the new vertex.

- We first calculated the quadratic error of each vertex following the computation presented in the paper.

- Then, we applied our newly written function on each edge (Providing its index in the E - edge matrix)
  and retrieved its cost by considering the possible cases shown in the paper such as when the gradient matrix is
  invertable and when its not invertable.

- Afterwards we placed all our edges in a priority queue sorted by cost from lowest to highest where the first
  edge in this queue is the minimum cost edge, and updated our edge iterator with the updated edges.


Clause 11:

- We implemented the "new_collapse_edge" function following the steps in the assignment, we took the lowest
  cost edge from our priority queue constructed using the function mentioned in Clause 10.

- We used igl library collapse_edge function to check if it collapsed the edge we provided and if so,
  updated the new vertex edges errors and remove the other two collapsed edges.

- We then iterated over the neigbour faces which our edge was a part of and updated them with the newly computed
  edge and its cost and the vertex new position.


The hardest part was to implement the "new_cost_and_placement" function because it was diffucult to follow along
the article and simultaneously learn how to interface with the eigen library functions.